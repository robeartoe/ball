steps:
# Build the container image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/shout:$COMMIT_SHA', '.']

# Run Integration Tests: 
# - name: 'ubuntu'
#   args: ["bash", "-c", "apt-get install unzip -y"]
# - name: 'gcr.io/cloud-builders/gcloud'
#   entrypoint: "bash"
#   args:
#     - "-c"
#     - |
#         curl -fsSL https://deno.land/x/install/install.sh | sh -s v1.3.2
#         deno run --allow-env --allow-net --allow-read ./main.ts &
#         deno test --allow-net test/main_test.ts
- name: 'gcr.io/$PROJECT_ID/docker-compose:latest'
  entrypoint: '/bin/bash'
  args: 
    - "-c"
    - |
      docker-compose up -d
- name: 'gcr.io/$PROJECT_ID/docker-compose:latest'
  id: 'integration-test'
  entrypoint: '/bin/bash'
  args:
    - "-c"
    - |
      curl -fsSL https://deno.land/x/install/install.sh | sh && ./run_tests.sh
# - name: 'gcr.io/cloud-builders/docker'
#   id: "detached-test-server"
#   args: [ 'run', '-d', '-p', '8080:8080','-e', 'PORT=8080', 'gcr.io/$PROJECT_ID/shout:$COMMIT_SHA', "./run_tests.sh"]
# - name: 'hayd/alpine-deno'
  # args: ["test", "--allow-net", "./test/main_test.ts"]


# Push the container image to Container Registry
# - name: 'gcr.io/cloud-builders/docker'
#   args: ['push', 'gcr.io/$PROJECT_ID/shout:$COMMIT_SHA']
# Deploy container image to Cloud Run
# - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
#   entrypoint: gcloud
#   args:
#     - 'run'
#     - 'deploy'
#     - 'shout'
#     - '--image'
#     - 'gcr.io/$PROJECT_ID/shout:$COMMIT_SHA'
#     - '--region'
#     - 'us-west1'
#     - '--platform'
#     - 'managed'
images:
  - 'gcr.io/$PROJECT_ID/shout:$COMMIT_SHA'
